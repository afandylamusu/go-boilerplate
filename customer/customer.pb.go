// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

package customer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FindCustomerRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=customerID,proto3" json:"customerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindCustomerRequest) Reset()         { *m = FindCustomerRequest{} }
func (m *FindCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*FindCustomerRequest) ProtoMessage()    {}
func (*FindCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{0}
}

func (m *FindCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindCustomerRequest.Unmarshal(m, b)
}
func (m *FindCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindCustomerRequest.Marshal(b, m, deterministic)
}
func (m *FindCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindCustomerRequest.Merge(m, src)
}
func (m *FindCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_FindCustomerRequest.Size(m)
}
func (m *FindCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindCustomerRequest proto.InternalMessageInfo

func (m *FindCustomerRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

type FindCustomerResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindCustomerResponse) Reset()         { *m = FindCustomerResponse{} }
func (m *FindCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*FindCustomerResponse) ProtoMessage()    {}
func (*FindCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{1}
}

func (m *FindCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindCustomerResponse.Unmarshal(m, b)
}
func (m *FindCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindCustomerResponse.Marshal(b, m, deterministic)
}
func (m *FindCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindCustomerResponse.Merge(m, src)
}
func (m *FindCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_FindCustomerResponse.Size(m)
}
func (m *FindCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindCustomerResponse proto.InternalMessageInfo

func (m *FindCustomerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*FindCustomerRequest)(nil), "customer.FindCustomerRequest")
	proto.RegisterType((*FindCustomerResponse)(nil), "customer.FindCustomerResponse")
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor_9efa92dae3d6ec46) }

var fileDescriptor_9efa92dae3d6ec46 = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2e, 0x2d, 0x2e,
	0xc9, 0xcf, 0x4d, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x4c,
	0xb9, 0x84, 0xdd, 0x32, 0xf3, 0x52, 0x9c, 0xa1, 0xfc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x39, 0x2e, 0x2e, 0x98, 0x12, 0x4f, 0x17, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x24,
	0x11, 0x25, 0x03, 0x2e, 0x11, 0x54, 0x6d, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x12, 0x5c,
	0xec, 0xc5, 0xa5, 0xc9, 0xc9, 0xa9, 0xc5, 0xc5, 0x60, 0x4d, 0x1c, 0x41, 0x30, 0xae, 0x51, 0x2c,
	0x97, 0x08, 0x4c, 0x75, 0x60, 0x69, 0x6a, 0x51, 0x65, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa,
	0x90, 0x2b, 0x17, 0x0b, 0xc8, 0x24, 0x21, 0x59, 0x3d, 0xb8, 0x1b, 0xb1, 0x38, 0x48, 0x4a, 0x0e,
	0x97, 0x34, 0xc4, 0xe2, 0x24, 0x36, 0xb0, 0xc7, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa1,
	0xae, 0x9e, 0x34, 0xea, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerQueryServiceClient is the client API for CustomerQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerQueryServiceClient interface {
	Find(ctx context.Context, in *FindCustomerRequest, opts ...grpc.CallOption) (*FindCustomerResponse, error)
}

type customerQueryServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerQueryServiceClient(cc *grpc.ClientConn) CustomerQueryServiceClient {
	return &customerQueryServiceClient{cc}
}

func (c *customerQueryServiceClient) Find(ctx context.Context, in *FindCustomerRequest, opts ...grpc.CallOption) (*FindCustomerResponse, error) {
	out := new(FindCustomerResponse)
	err := c.cc.Invoke(ctx, "/customer.CustomerQueryService/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerQueryServiceServer is the server API for CustomerQueryService service.
type CustomerQueryServiceServer interface {
	Find(context.Context, *FindCustomerRequest) (*FindCustomerResponse, error)
}

// UnimplementedCustomerQueryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerQueryServiceServer struct {
}

func (*UnimplementedCustomerQueryServiceServer) Find(ctx context.Context, req *FindCustomerRequest) (*FindCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}

func RegisterCustomerQueryServiceServer(s *grpc.Server, srv CustomerQueryServiceServer) {
	s.RegisterService(&_CustomerQueryService_serviceDesc, srv)
}

func _CustomerQueryService_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerQueryServiceServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.CustomerQueryService/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerQueryServiceServer).Find(ctx, req.(*FindCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerQueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.CustomerQueryService",
	HandlerType: (*CustomerQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Find",
			Handler:    _CustomerQueryService_Find_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "customer.proto",
}
